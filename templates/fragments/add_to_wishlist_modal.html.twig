<style>
    .custom-toast-container {
        position: fixed;
        bottom: 50px;
        right: 20px;
        z-index: 1050;
        display: flex;
        flex-direction: column-reverse; /* Newer messages appear at the bottom */
        gap: 10px; /* Space between messages */
    }

    .custom-toast {
        background-color: #D10024;
        color: #fff;
        padding: 10px 20px;
        border-radius: 5px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        animation: fadeInOut 3s ease-in-out;
    }

    .custom-toast-body {
        font-size: 14px;
    }

    @keyframes fadeInOut {
        0% { opacity: 0; transform: translateY(20px); }
        10% { opacity: 1; transform: translateY(0); }
        90% { opacity: 1; transform: translateY(0); }
        100% { opacity: 0; transform: translateY(20px); }
    }
</style>

<div class="custom-toast-container">
    <!-- Toast messages will be dynamically inserted here -->
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const toastContainer = document.querySelector('.custom-toast-container');

        function showToast(message) {
            const toast = document.createElement('div');
            toast.className = 'custom-toast';
            toast.innerHTML = `<div class="custom-toast-body">${message}</div>`;
            toastContainer.appendChild(toast);

            setTimeout(() => {
                toast.remove();
                updateToastPositions();
            }, 3000);

            updateToastPositions();
        }

        function updateToastPositions() {
            const toasts = Array.from(toastContainer.children);
            toasts.forEach((toast, index) => {
                toast.style.bottom = `${index * 60}px`;
            });
        }

        const wishlistButtons = document.querySelectorAll('.add-to-wishlist');
        wishlistButtons.forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();

                // Check authentication first
                if(this.getAttribute('data-aunthenticated') === 'no'){
                    window.location.href = "{{ path('app_register') }}";
                    return; // Stop further execution
                }

                const url = this.getAttribute('data-url');

                fetch(url, {
                    method: 'GET',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            console.log("success1");
                            showToast(data.message);
                        } else {
                            alert('An error occurred while adding the product to the wishlist.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred. Please try again.');
                    });
            });
        });
    });
</script>